version: "3.3"
services:
  proxy:
    image: traefik:2.11
    container_name: "traefik"
    networks:
      - traefik
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
    volumes:
      - letsencrypt:/letsencrypt
      # - ./dynamic.yml:/dynamic.yml
      # - ./users.u:/users/users.u
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    command:
      # Docker configuration
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik"
      # Configure entrypoint
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # SSL configuration
      - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.letsencryptresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencryptresolver.acme.email=raphaelthi59@gmail.com"
      - "--certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json"
      # Global HTTP -> HTTPS
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"

      # Enable debug logs
      - "--log.level=DEBUG"

      # Express API
      # - "--providers.file.filename=/dynamic.yml"

      # Middleware basicAuth
      # - "http.middlewares.simple-auth.basicAuth.users=musubi42:$$2y$$10$$jZA5HZUPZbKKofFGNRqzOObt7O0hbFEqoVhe5adthzaszcMG3yhI6"

      # Enable dashboard
      - "--api.dashboard=true"

      # - "--http.services.web-app1.loadbalancer.server.port=80"
      # - "--http.services.web-app1.loadbalancer.server.url=http://20.71.252.92"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.dashboard.service=api@internal"
      # - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
      # - "traefik.http.middlewares.dashboard-auth.basicauth.usersfile=/users/users.u"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.pdm.musubi.dev`)"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      # WatchTower auto update
      # TODO: Check for non interrupting update
      - "com.centurylinklabs.watchtower.enable=true"

  portainer:
    image: portainer/portainer-ce
    container_name: "portainer"
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.rule=Host(`portainer.pdm.musubi.dev`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=letsencryptresolver"
      # WatchTower auto update
      # TODO: Check for non interrupting update
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/portaefik/portainer-data:/data
    restart: unless-stopped


networks:
  traefik:
    external:
      name: traefik
    
volumes:
  letsencrypt:
    external: true

